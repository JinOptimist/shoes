@model Shoes.Models.ShoesViewModel
@{
    ViewBag.Title = "Добавить туфельку";
    var isNew = Model.Id <= 0;
}

<div class="page-header">
    <h1>@(isNew ? "Добавить" : "Редактировать") туфельку</h1>
</div>

@using (Html.BeginForm("AddShoes", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    <div class="row">
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ImageUrl)

        @Html.ValidationSummary()
        <div class="col-sm-6">
            <div class="form-group row">
                <label for="image">Картинка:</label>
                <input type="file" name="image" id="image" />
            </div>
            <div class="form-group row">
                <p>
                    @Html.ValidationMessageFor(x => x.Name)
                </p>
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Название" })
            </div>
            <div class="form-group row">
                <label for="Name">Номер:</label>
                <p>
                    @Html.ValidationMessageFor(x => x.OldId)
                </p>
                <div class="col-xs-3">
                    @Html.TextBoxFor(x => x.OldId, new { @class = "form-control", type = "number" })
                </div>
                <div class="col-xs-2">
                    <input id="openLvl2" type="button" class="form-control" value="+" />
                </div>
                <div class="col-xs-3 oldIdLvl2">
                    @Html.TextBoxFor(x => x.OldIdLvl2, new { @class = "form-control", type = "number" })
                </div>
            </div>
            <div class="form-group row">
                <label for="Name">Размер:</label>
                <p>
                    @Html.ValidationMessageFor(x => x.Width)
                    @Html.ValidationMessageFor(x => x.Height)
                </p>
                <div class="col-xs-3">
                    @Html.TextBoxFor(x => x.Width, new { @class = "form-control", type = "number" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(x => x.Height, new { @class = "form-control", type = "number" })
                </div>
            </div>
            <div class="form-group row">
                @Html.TextAreaFor(x => x.Desc, new { @class = "form-control", placeholder = "Описание" })
            </div>
            <div class="form-group row">
                @Html.DropDownListFor(x => x.DropDowns.MaterialId, Model.DropDowns.MaterialList, new { @class = "form-control" })
            </div>
            <div class="form-group row">
                @Html.DropDownListFor(x => x.DropDowns.GroupId, Model.DropDowns.GroupList, new { @class = "form-control" })
            </div>
            <div class="form-group row">
                @Html.DropDownListFor(x => x.DropDowns.GiverId, Model.DropDowns.GiversList, new { @class = "form-control" })
            </div>
            <div class="form-group row">
                <label for="PlaceOfBuying">Происхождение:</label>
                @Html.DropDownListFor(x => x.DropDowns.PlaceOfBuyingId, Model.DropDowns.PlaceOfBuyingList, new { @class = "form-control" })
            </div>

            <div class="form-group date-purchase">
                <label class="row" for="PlaceOfProduce">Приобретён:</label>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.DropDownListFor(x => x.YearOfPurchase, Model.DropDowns.YearsOfPurchase, new { @class = "form-control short-date" })
                        <input type="date" id="DateOfPurchase" name="DateOfPurchase" value="@string.Format("{0:yyyy-MM-dd}", Model.DateOfPurchase)" class="form-control full-date" />
                    </div>
                    <div class="col-sm-2">
                        <input type="button" value="Точней" class="form-control switch-date" />
                        @Html.HiddenFor(x => x.DateOfPurchaseHasFullValue)
                    </div>
                </div>
            </div>
            <div class="form-group date-create">
                <label class="row" for="PlaceOfProduce">Создан:</label>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.DropDownListFor(x => x.YearOfCreating, Model.DropDowns.YearsOfCreating, new { @class = "form-control short-date" })
                        <input type="date" id="DateOfCreating" name="DateOfCreating" value="@string.Format("{0:yyyy-MM-dd}", Model.DateOfCreating)" class="form-control full-date" />
                    </div>
                    <div class="col-sm-2">
                        <input type="button" value="Точней" class="form-control switch-date" />
                        @Html.HiddenFor(x => x.DateOfCreatingHasFullValue)
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <label for="IsPublic">Виден всем:</label>
                @Html.CheckBoxFor(x => x.IsPublic, new { @class = "form-control" })
            </div>
            <div class="form-group row">
                <label for="NumberOfDuplication">Количечство дубликатов:</label>
                @Html.TextBoxFor(x => x.NumberOfDuplication, new { @class = "form-control" })
            </div>
            <div class="form-group row">
                @Html.TextAreaFor(x => x.Notation, new { @class = "form-control", placeholder = "Примечания" })
            </div>
            <div class="form-group row">
                <input type="submit" value="@(isNew ? "Создать" : "Сохранить") " class="form-control" />
            </div>
        </div>
        <img class="col-sm-6" id="preview" src="@Model.ImageUrl" />
    </div>
}

<script>
    (function () {
        init();

        $("#openLvl2").click(function () {
            $(".oldIdLvl2").css("visibility", "visible");
        });

        $(".switch-date").click(function () {
            $(this).parent().parent().find(".short-date").toggle();
            $(this).parent().parent().find(".full-date").toggle();

            var hasFullValueInput = $(this).parent().find("input[type=hidden]");
            // work with .net format of boolean
            var hasFullValue = hasFullValueInput.val() == "False";
            hasFullValueInput.val(hasFullValue ? "True" : "False");
            $(this).val(hasFullValue ? "Год" : "Точней");
        });

        function init() {
            var datePurchaseBlock = $(".date-purchase");
            var dateOfPurchaseHasValue = @Model.DateOfPurchaseHasFullValue.ToString().ToLower();
            dateInit(datePurchaseBlock, dateOfPurchaseHasValue);

            var dateCreateBlock = $(".date-create");
            var dateOfCreatingHasValue = @Model.DateOfCreatingHasFullValue.ToString().ToLower();
            dateInit(dateCreateBlock, dateOfCreatingHasValue);
        }

        function dateInit(dateBlock, hasFullValue) {
            if (hasFullValue) {
                dateBlock.find(".short-date").hide();
            } else {
                dateBlock.find(".full-date").hide();
            }

            dateBlock.find(".switch-date").val(hasFullValue ? "Год" : "Точней");
        }
    })()
</script>