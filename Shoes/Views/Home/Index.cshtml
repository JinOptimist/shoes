@model Shoes.Models.IndexViewModel
@{
    ViewBag.Title = "Коллекция";
}

<div class="page-header">
    <h1>Коллекция <span id="selectedCount">@Model.Shoes.Count()/</span>@Model.Shoes.Count() шт </h1>
    <div class="row">
        <input type="button" class="size form-control col-md-1" value="Маленькие" id="small" />
        <input type="button" class="size form-control col-sm-1 active" value="Средние" id="medium" />
        <input type="button" class="size form-control col-sm-1" value="Большие" id="big" />
        <input type="button" class="size form-control col-sm-1" value="Целиком" id="full" />
    </div>
    <div class="row filters">
        @Html.DropDownListFor(x => x.DropDowns.MaterialId, Model.DropDowns.MaterialList,
                            new {
                                @class = "form-control col-sm-4 dropdowns-filter",
                                data_type = "material"
                            })
        @Html.DropDownListFor(x => x.DropDowns.GroupId, Model.DropDowns.GroupList,
                            new {
                                @class = "form-control col-sm-4 dropdowns-filter",
                                data_type = "group"
                            })

        @if (User.Identity.IsAuthenticated) {
            @Html.DropDownListFor(x => x.DropDowns.GiverId, Model.DropDowns.GiversList,
                            new {
                                @class = "form-control col-sm-4 dropdowns-filter",
                                data_type = "giver"
                            })
            @Html.DropDownListFor(x => x.DropDowns.PlaceOfBuyingId, Model.DropDowns.PlaceOfBuyingList,
                            new {
                                @class = "form-control col-sm-4 dropdowns-filter",
                                data_type = "place"
                            })
        }
        <input type="button" class="form-control col-sm-1" value="Сбросить" id="refresh" />
    </div>
</div>

@if (Model.Shoes != null) {
    <div class="row">
        @foreach (var shoes in Model.Shoes.Where(x => x.IsPublic || User.Identity.IsAuthenticated)) {
            <div class="col-sm-4 shoes-block" > @*style="display: @(shoes.OldIdLvl2 < 2 ? "" : "none")"*@
                <input type="hidden" class="material" value="@shoes.Material.Id" />
                <input type="hidden" class="group" value="@shoes.Group.Id" />
                <input type="hidden" class="giver" value="@shoes.Giver.Id" />
                <input type="hidden" class="place" value="@shoes.PlaceOfBuying.Id" />
                <div class="preview-data">
                    <img src="@shoes.ImageUrl" class="preview-image" data-name="@shoes.Name"
                         data-real-id="@shoes.Id"
                         data-old-id-common="@shoes.OldId"
                         data-old-id="@(shoes.OldId + (shoes.OldIdLvl2 != 0
                            ? "." + shoes.OldIdLvl2
                            : string.Empty))" />
                    <p>
                        @shoes.Name
                        @if (User.Identity.IsAuthenticated) {
                            <span>
                                №@(shoes.OldId + (shoes.OldIdLvl2 != 0
                            ? "." + shoes.OldIdLvl2
                            : string.Empty))
                            </span>
                        }
                    </p>
                    @if (shoes.Material.Id.ToString() != Model.DropDowns.MaterialList.First().Value) {
                        <p>
                            <b>Материал</b>: @shoes.Material.Name
                        </p>
                    }
                    @if (shoes.Group.Id.ToString() != Model.DropDowns.GroupList.First().Value) {
                        <p>
                            <b>Группа</b>: @shoes.Group.Name
                        </p>
                    }
                    @if (shoes.YearOfPurchase.HasValue) {
                        <p>
                            <b>Дата появления в коллекции</b>: @shoes.YearOfPurchase
                        </p>
                    }
                    @if (User.Identity.IsAuthenticated) {
                        if (!string.IsNullOrWhiteSpace(shoes.Desc)) {
                            <p>
                                <b>Описание</b>: @shoes.Desc
                            </p>
                        }
                        if (shoes.Width != 1 || shoes.Height != 1) {
                            <p>
                                <b>Размер</b>: @shoes.Width * @shoes.Height
                            </p>
                        }
                        if (shoes.PlaceOfBuying.Id.ToString() != Model.DropDowns.PlaceOfBuyingList.First().Value) {
                            <p>
                                <b>Место покупки</b>: @shoes.PlaceOfBuying.CountryName
                                @(string.IsNullOrEmpty(shoes.PlaceOfBuying.CityName)
                                    ? string.Empty
                                    : shoes.PlaceOfBuying.CityName)
                            </p>
                        }
                        if (shoes.Giver.Id.ToString() != Model.DropDowns.GiversList.First().Value) {
                            <p>
                                <b>Даритель</b>: @shoes.Giver.LastName @shoes.Giver.FirstName
                            </p>
                        }
                        <p>
                            <a href="@Url.Action("Edit", new { id = shoes.Id})">Редактировать</a>
                            /
                            <a href="@Url.Action("Remove", new { id = shoes.Id})" class="remove">Удалить</a>
                        </p>
                    }
                </div>
            </div>
        }
    </div>
    <!-- Popup -->
    <div class="modal fade" id="myModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Туфелька</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div id="myCarousel" class="carousel slide" data-ride="carousel">
                        <!-- Indicators -->
                        <ol class="carousel-indicators">
                            @*<li data-target="#myCarousel" data-slide-to="0" class="active"></li>*@                            
                        </ol>

                        <!-- Wrapper for slides -->
                        <div class="carousel-inner">
                            @*<div class="item active">
                                <img src="/Content/img/30024.jpg" />
                            </div>*@
                        </div>

                        <!-- Left and right controls -->
                        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#myCarousel" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>

                    @*<div class="row">
                        <img id="preview-img" class="col-sm-12" />
                    </div>*@
                </div>
                @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary">Next</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>*@
            </div>
        </div>
    </div>
}

<script>
    (function () {
        init();

        $(".preview-image").click(function () {
            $("#myModal").modal();

            var oldIdCommon = $(this).data("old-id-common");
            var images = $("[data-old-id-common=" + oldIdCommon + "]").map(function (index, img) {
                return $(img);
            });

            var title = $(this).data("name");
            if (images.length > 0) {
                title = title + " №" + oldIdCommon;
            }
            $(".modal-title").text(title);

            $(".carousel-inner").empty();
            $(".carousel-indicators").empty();
            var isActiveClass = '';
            for (var i = 0; i < images.length; i++) {
                isActiveClass = i == 0 ? 'active' : '';
                $(".carousel-inner").append("<div class='item " + isActiveClass + "'><img src='" + images[i].attr("src") + "' /></div>");
                $(".carousel-indicators").append("<li class='" + isActiveClass+"' data-target='#myCarousel' data-slide-to='" + i + "'></li>");
            }
            
            initCarousel();
        });

        $(".remove").click(function () {
            if (!confirm("Вы уверены что хотите удалить туфельку?")) {
                return false;
            }
        });

        $(".dropdowns-filter").change(function () {
            $(".dropdowns-filter").removeClass("active");
            var typeName = $(this).data("type");
            var type = $("." + typeName);
            var first = $(this).find("option:first-child").val();
            var selectedId = $(this).val();

            var otherFilters = $(".dropdowns-filter:not([data-type=" + typeName + "])");
            otherFilters.find("option").removeAttr('selected');
            otherFilters.find("option:first").attr('selected', 'selected');
            if (selectedId == first) {
                type.parent().show();
            } else {
                $(this).addClass("active");
                type.parent().hide();
                $("." + typeName + "[value=" + selectedId + "]").parent().show();
            }

            var selectedCount = $(".shoes-block:visible ").length;
            $("#selectedCount").text(selectedCount + "/");
        });

        $("#refresh").click(function () {
            $(".dropdowns-filter").removeClass("active");
            var filters = $(".dropdowns-filter");
            filters.find("option").removeAttr('selected');
            filters.find("option:first").attr('selected', 'selected');
            $(".shoes-block").show();

            var selectedCount = $(".shoes-block:visible ").length;
            $("#selectedCount").text(selectedCount + "/");
        });

        $(".size").click(function () {
            $(".size").removeClass("active");
            $(this).addClass("active");
            var type = $(this).attr("id");
            switch (type) {
                case "small":
                    clear();
                    $(".shoes-block").addClass("col-sm-3");
                    break;
                case "medium":
                    clear();
                    $(".shoes-block").addClass("col-sm-4");
                    break;
                case "big":
                    clear();
                    $(".shoes-block").addClass("col-sm-6");
                    break;
                case "full":
                    clear();
                    $(".shoes-block").addClass("col-sm-12");
                    break;
            }
        });

        function init() {
            initCarousel();
        }

        function clear() {
            $(".shoes-block").removeClass("col-sm-3");
            $(".shoes-block").removeClass("col-sm-4");
            $(".shoes-block").removeClass("col-sm-6");
            $(".shoes-block").removeClass("col-sm-12");
        }

        function initCarousel() {
            $('#myCarousel').carousel({
                pause: true,
                interval: false
            }).carousel(0);
        }
    })();
</script>